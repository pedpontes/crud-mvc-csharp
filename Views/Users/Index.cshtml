@using crud_api_view.Models

@model IEnumerable<User>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Users</title>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>ID</td>
                <th>Name</td>
                <th>Age</td>
                <th>Password</td>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var user in Model){
                <tr>
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Age</td>
                    <td>@user.Password</td>
                    <td><input id="@user.Id" type="button" value="X" onclick="dell(event)"></td>
                    <td><input id="@user.Id" type="button" value="Edit" onclick="edit(@user.Id, '@user.Name', @user.Age)"></td>
                </tr>
            }
        </tbody>
    </table>

    @* modal *@
    <div id="modalUserEdit" style="display: none;">
        <h1 id="idEdit"></h1>
        <form onsubmit="editSave(event)">
            <label for="name">
                <input type="text" name="name" id="nameEdit">
            </label>
            <label for="age">
                <input type="number" name="age" id="ageEdit">
            </label>
            <label for="pass">
                <input type="password" name="pass" id="passEdit">
            </label>
            <input type="submit" value="Salvar">
        </form>
    </div>
    <script>
        const editSave = async (e) => {
            e.preventDefault();
            const id = document.querySelector("#idEdit").textContent;
            const name = document.querySelector("input#nameEdit").value;
            const age = document.querySelector("input#ageEdit").value;
            const pass = document.querySelector("input#passEdit").value;

            try{
                const response = await fetch("users", {
                    method: 'put',
                    headers: {
                        "Content-Type":"application/json"
                        },
                    body: JSON.stringify({"Id": id, "Name": name, "Age": age, "Pass": pass})
                })
                const status = await response.status;
                @* return document.location.reload(); *@

            }catch(error){
                console.log(error);
                @* return document.location.reload(); *@
            }
        }

        const edit = (id, name, age) => {
            const modal = document.querySelector("div#modalUserEdit");
            const idEdit = document.querySelector("#idEdit");
            const nameEdit = document.querySelector("#nameEdit");
            const ageEdit = document.querySelector("#ageEdit");
            modal.setAttribute("style", "display: block;");

            idEdit.textContent = id;
            nameEdit.setAttribute("placeholder", `${name}`);
            ageEdit.setAttribute("placeholder", `${age}`);


            return;
        }
        const dell = async (e) => {
            e.preventDefault();
            const id = e.target.id;
            
            try{
                const response = await fetch(`users?id=${id}`, {method: 'delete'})
                const status = await response.status;
                document.location.reload();

                return;

            }catch(error){
                console.log(error);
                return document.location.reload();
            }
        }
    </script>
</body>
</htusing System.Collections;
#line default
